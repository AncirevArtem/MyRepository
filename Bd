create table if not exists type_social_role
(
	id serial not null
		constraint type_social_role_pkey
			primary key,
	title varchar(30)
)
;

create table if not exists "user"
(
	id serial not null
		constraint user_pkey
			primary key,
	id_in_bank integer,
	first_name varchar(30),
	surname varchar(30),
	patronymic varchar(30),
	age integer,
	username varchar(30),
	passwaord varchar(30),
	link_to_the_vk varchar(60),
	link_to_the_facebook varchar(60),
	link_to_the_instagram varchar(60),
	url_avatar varchar(60),
	id_friend bigint
		constraint user_id_friend_fkey
			references "user",
	email varchar(30),
	phone varchar(30),
	id_type_social_role integer
		constraint user_id_type_social_role_fkey
			references type_social_role
)
;

create table if not exists feedback
(
	id_questioner integer
		constraint feedback_id_questioner_fkey
			references "user",
	id_answering integer,
	question text,
	answer text
)
;

create table if not exists set_of_points
(
	id_user integer
		constraint set_of_points_id_user_fkey
			references "user",
	for_invite bigint,
	for_logon bigint,
	for_viewing_ads bigint,
	for_help bigint
)
;

create table if not exists referral_links
(
	who_invite bigint
		constraint referral_links_who_invite_fkey
			references "user",
	who_new bigint
		constraint referral_links_who_new_fkey
			references "user"
)
;

create table if not exists type_card
(
	description varchar(300),
	title varchar(30),
	id_type_card serial not null
		constraint type_card_pkey
			primary key
)
;

create table if not exists archive_cards
(
	requisites integer,
	number_card integer,
	id_user integer
		constraint archive_cards_id_user_fkey
			references "user",
	type_card integer
		constraint archive_cards_type_card_fkey
			references type_card,
	unique_word varchar(30)
)
;


